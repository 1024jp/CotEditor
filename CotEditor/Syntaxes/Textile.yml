extensions:
- keyString: "textile"
metadata:
  author: "1024jp"
  distributionURL: "https://coteditor.com"
  version: "1.1.3"
  license: "Same as CotEditor"
  lastModified: "2022-04-25"
outlineMenu:
- keyString: "$2"
  beginString: "^h1([\\[{()=>]\\S*)?\\.[\\t ]*(.*)$"
  description: "h1"
  bold: true
- keyString: "    $2"
  beginString: "^h2([\\[{()=>]\\S*)?\\.[\\t ]*(.*)$"
  description: "h2"
  bold: true
- beginString: "^h3([\\[{()=>]\\S*)?\\.[\\t ]*(.*)$"
  keyString: "        $2"
  description: "h3"
- beginString: "^h4([\\[{()=>]\\S*)?\\.[\\t ]*(.*)$"
  keyString: "            $2"
  description: "h4"
- beginString: "^h5([\\[{()=>]\\S*)?\\.[\\t ]*(.*)$"
  keyString: "                $2"
  description: "h5"
- beginString: "^h6([\\[{()=>]\\S*)?\\.[\\t ]*(.*)$"
  keyString: "                    $2"
  description: "h6"
completions: []
commands: []
characters:
- beginString: "<pre(\\s[^<>]*)?>"
  endString: "</pre>"
  regularExpression: true
- beginString: "@[^\\R]*@"
  regularExpression: true
comments: []
values:
- beginString: "\\[\\d+\\]"
  regularExpression: true
- beginString: "\\s\"[^\\R]*?\"(?>:)"
  regularExpression: true
types:
- beginString: "^h[1-6]([\\[{()=>]\\S*)?\\.[\\t ]"
  endString: "$"
  regularExpression: true
numbers:
- beginString: "![<>]?\\S*!"
  regularExpression: true
strings:
- beginString: "(?<=!):\\S*"
  regularExpression: true
- beginString: "(?<=\"):\\S*"
  regularExpression: true
- beginString: "</[a-zA-Z]+>"
  regularExpression: true
- beginString: "<[a-zA-Z]+([^<>]*)?>"
  regularExpression: true
- beginString: "^\\[\\S+\\]\\S"
  endString: "$"
  regularExpression: true
keywords:
- beginString: "(?<![\\\\*])\\*[^ \\t*](?!.*\\R{2})[^\\R]*?(?<![\\\\ ])\\*"
  description: "bold"
  regularExpression: true
- beginString: "(?<![\\_])_[^ \\t*](?!.*\\R{2})[^\\R]*?(?<![\\\\ ])_"
  description: "italic"
  regularExpression: true
- beginString: "^#+[\\t ]"
  regularExpression: true
- beginString: "^\\*+[\\t ]"
  regularExpression: true
- beginString: "^bq([\\[{()=>]\\S*)?\\.[\\t ]"
  regularExpression: true
- beginString: "^fn\\d+\\.[\\t ]"
  regularExpression: true
- beginString: "^p([\\[{()=>]\\S*)?\\.[\\t ]"
  regularExpression: true
